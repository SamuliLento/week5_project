{"id":"src/index.js","dependencies":[{"name":"/project/week5_project/package.json","includedInParent":true,"mtime":1665136241972}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nif (document.readyState !== \"loading\") {\n  console.log(\"Document is ready!\");\n  initializeCode();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"Document is ready after waiting!\");\n    initializeCode();\n  });\n}\n\nfunction initializeCode() {\n  return _initializeCode.apply(this, arguments);\n}\n\nfunction _initializeCode() {\n  _initializeCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var getData, _getData, initMap, getPositive, _getPositive, positiveArray, getNegative, _getNegative, negativeArray, getFeature;\n\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _getNegative = function _getNegative3() {\n              _getNegative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                var url, negativePromise, negativeJSON, negativeArray;\n                return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        url = \"https://statfin.stat.fi/PxWeb/sq/944493ca-ea4d-4fd9-a75c-4975192f7b6e\";\n                        _context3.next = 3;\n                        return fetch(url);\n\n                      case 3:\n                        negativePromise = _context3.sent;\n                        _context3.next = 6;\n                        return negativePromise.json();\n\n                      case 6:\n                        negativeJSON = _context3.sent;\n                        negativeArray = Object.values(negativeJSON.dataset.value);\n                        return _context3.abrupt(\"return\", negativeArray);\n\n                      case 9:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n              return _getNegative.apply(this, arguments);\n            };\n\n            getNegative = function _getNegative2() {\n              return _getNegative.apply(this, arguments);\n            };\n\n            _getPositive = function _getPositive3() {\n              _getPositive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                var url, positivePromise, positiveJSON, positiveArray;\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        url = \"https://statfin.stat.fi/PxWeb/sq/4bb2c735-1dc3-4c5e-bde7-2165df85e65f\";\n                        _context2.next = 3;\n                        return fetch(url);\n\n                      case 3:\n                        positivePromise = _context2.sent;\n                        _context2.next = 6;\n                        return positivePromise.json();\n\n                      case 6:\n                        positiveJSON = _context2.sent;\n                        positiveArray = Object.values(positiveJSON.dataset.value);\n                        return _context2.abrupt(\"return\", positiveArray);\n\n                      case 9:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n              return _getPositive.apply(this, arguments);\n            };\n\n            getPositive = function _getPositive2() {\n              return _getPositive.apply(this, arguments);\n            };\n\n            _getData = function _getData3() {\n              _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var url, dataPromise, dataJSON;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        url = \"https://geo.stat.fi/geoserver/wfs?service=WFS&version=2.0.0&request=GetFeature&typeName=tilastointialueet:kunta4500k&outputFormat=json&srsName=EPSG:4326\";\n                        _context.next = 3;\n                        return fetch(url);\n\n                      case 3:\n                        dataPromise = _context.sent;\n                        _context.next = 6;\n                        return dataPromise.json();\n\n                      case 6:\n                        dataJSON = _context.sent;\n                        initMap(dataJSON);\n\n                      case 8:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n              return _getData.apply(this, arguments);\n            };\n\n            getData = function _getData2() {\n              return _getData.apply(this, arguments);\n            };\n\n            initMap = function initMap(data) {\n              var map = L.map(\"map\", {\n                minZoom: -3\n              });\n              getNegative();\n              var geoJson = L.geoJSON(data, {\n                onEachFeature: getFeature,\n                weight: 2\n              }).addTo(map);\n              var osm = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n                maxZoom: 19,\n                attribution: \"© OpenStreetMap\"\n              }).addTo(map);\n              map.fitBounds(geoJson.getBounds());\n            };\n\n            _context4.next = 9;\n            return getPositive();\n\n          case 9:\n            positiveArray = _context4.sent;\n            _context4.next = 12;\n            return getNegative();\n\n          case 12:\n            negativeArray = _context4.sent;\n\n            getFeature = function getFeature(feature, layer) {\n              if (!feature) return;\n              var id = feature.id.split(\".\"); //stackoverflow convert string to array\n\n              layer.bindTooltip(feature.properties.name);\n              layer.bindPopup(\"<ul>\\n          <li>Name: \".concat(feature.properties.name, \"</li>\\n          <li>Positive migration: \").concat(positiveArray[id[1]], \"</li>\\n          <li>Negative migration: \").concat(negativeArray[id[1]], \"</li>\\n      </ul>\"));\n            };\n\n            getData();\n\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _initializeCode.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":47},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":4},"source":"src/index.js","original":{"line":1,"column":4},"name":"document"},{"generated":{"line":9,"column":12},"source":"src/index.js","original":{"line":1,"column":12}},{"generated":{"line":9,"column":13},"source":"src/index.js","original":{"line":1,"column":13},"name":"readyState"},{"generated":{"line":9,"column":23},"source":"src/index.js","original":{"line":1,"column":4}},{"generated":{"line":9,"column":28},"source":"src/index.js","original":{"line":1,"column":28}},{"generated":{"line":9,"column":37},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":39},"source":"src/index.js","original":{"line":1,"column":39}},{"generated":{"line":10,"column":2},"source":"src/index.js","original":{"line":2,"column":2},"name":"console"},{"generated":{"line":10,"column":9},"source":"src/index.js","original":{"line":2,"column":9}},{"generated":{"line":10,"column":10},"source":"src/index.js","original":{"line":2,"column":10},"name":"log"},{"generated":{"line":10,"column":13},"source":"src/index.js","original":{"line":2,"column":2}},{"generated":{"line":10,"column":14},"source":"src/index.js","original":{"line":2,"column":14}},{"generated":{"line":10,"column":34},"source":"src/index.js","original":{"line":2,"column":2}},{"generated":{"line":11,"column":2},"source":"src/index.js","original":{"line":3,"column":2},"name":"initializeCode"},{"generated":{"line":11,"column":16},"source":"src/index.js","original":{"line":3,"column":16}},{"generated":{"line":12,"column":0},"source":"src/index.js","original":{"line":4,"column":1}},{"generated":{"line":12,"column":1},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":7},"source":"src/index.js","original":{"line":4,"column":7}},{"generated":{"line":13,"column":2},"source":"src/index.js","original":{"line":5,"column":2},"name":"document"},{"generated":{"line":13,"column":10},"source":"src/index.js","original":{"line":5,"column":10}},{"generated":{"line":13,"column":11},"source":"src/index.js","original":{"line":5,"column":11},"name":"addEventListener"},{"generated":{"line":13,"column":27},"source":"src/index.js","original":{"line":5,"column":2}},{"generated":{"line":13,"column":28},"source":"src/index.js","original":{"line":5,"column":28}},{"generated":{"line":13,"column":46},"source":"src/index.js","original":{"line":5,"column":2}},{"generated":{"line":13,"column":48},"source":"src/index.js","original":{"line":5,"column":48}},{"generated":{"line":13,"column":60},"source":"src/index.js","original":{"line":5,"column":60}},{"generated":{"line":14,"column":4},"source":"src/index.js","original":{"line":6,"column":4},"name":"console"},{"generated":{"line":14,"column":11},"source":"src/index.js","original":{"line":6,"column":11}},{"generated":{"line":14,"column":12},"source":"src/index.js","original":{"line":6,"column":12},"name":"log"},{"generated":{"line":14,"column":15},"source":"src/index.js","original":{"line":6,"column":4}},{"generated":{"line":14,"column":16},"source":"src/index.js","original":{"line":6,"column":16}},{"generated":{"line":14,"column":50},"source":"src/index.js","original":{"line":6,"column":4}},{"generated":{"line":15,"column":4},"source":"src/index.js","original":{"line":7,"column":4},"name":"initializeCode"},{"generated":{"line":15,"column":18},"source":"src/index.js","original":{"line":7,"column":18}},{"generated":{"line":16,"column":2},"source":"src/index.js","original":{"line":8,"column":3}},{"generated":{"line":16,"column":3},"source":"src/index.js","original":{"line":5,"column":2}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":9,"column":1}},{"generated":{"line":19,"column":9},"source":"src/index.js","original":{"line":11,"column":15},"name":"initializeCode"},{"generated":{"line":24,"column":79},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":4},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":8},"source":"src/index.js","original":{"line":12,"column":17},"name":"getData"},{"generated":{"line":25,"column":15},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":36},"source":"src/index.js","original":{"line":43,"column":17},"name":"getPositive"},{"generated":{"line":25,"column":47},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":25,"column":78},"source":"src/index.js","original":{"line":56,"column":17},"name":"getNegative"},{"generated":{"line":25,"column":89},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":27,"column":4},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":28,"column":6},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":29,"column":8},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":30,"column":10},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":31,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":32,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":32,"column":88},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":33,"column":16},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":34,"column":16},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":35,"column":18},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":36,"column":20},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":37,"column":22},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":38,"column":24},"source":"src/index.js","original":{"line":57,"column":10},"name":"url"},{"generated":{"line":38,"column":27},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":38,"column":30},"source":"src/index.js","original":{"line":58,"column":6}},{"generated":{"line":38,"column":101},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":39,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":40,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":40,"column":31},"source":"src/index.js","original":{"line":59,"column":34},"name":"fetch"},{"generated":{"line":40,"column":36},"source":"src/index.js","original":{"line":59,"column":39}},{"generated":{"line":40,"column":37},"source":"src/index.js","original":{"line":59,"column":40},"name":"url"},{"generated":{"line":40,"column":40},"source":"src/index.js","original":{"line":59,"column":39}},{"generated":{"line":40,"column":41},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":42,"column":22},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":43,"column":24},"source":"src/index.js","original":{"line":59,"column":10},"name":"negativePromise"},{"generated":{"line":43,"column":39},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":44,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":45,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":45,"column":31},"source":"src/index.js","original":{"line":60,"column":31},"name":"negativePromise"},{"generated":{"line":45,"column":46},"source":"src/index.js","original":{"line":60,"column":46}},{"generated":{"line":45,"column":47},"source":"src/index.js","original":{"line":60,"column":47},"name":"json"},{"generated":{"line":45,"column":51},"source":"src/index.js","original":{"line":60,"column":31}},{"generated":{"line":45,"column":53},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":47,"column":22},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":48,"column":24},"source":"src/index.js","original":{"line":60,"column":10},"name":"negativeJSON"},{"generated":{"line":48,"column":36},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":49,"column":24},"source":"src/index.js","original":{"line":61,"column":10},"name":"negativeArray"},{"generated":{"line":49,"column":37},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":49,"column":40},"source":"src/index.js","original":{"line":61,"column":26},"name":"Object"},{"generated":{"line":49,"column":46},"source":"src/index.js","original":{"line":61,"column":32}},{"generated":{"line":49,"column":47},"source":"src/index.js","original":{"line":61,"column":33},"name":"values"},{"generated":{"line":49,"column":53},"source":"src/index.js","original":{"line":61,"column":26}},{"generated":{"line":49,"column":54},"source":"src/index.js","original":{"line":61,"column":40},"name":"negativeJSON"},{"generated":{"line":49,"column":66},"source":"src/index.js","original":{"line":61,"column":52}},{"generated":{"line":49,"column":67},"source":"src/index.js","original":{"line":61,"column":53},"name":"dataset"},{"generated":{"line":49,"column":74},"source":"src/index.js","original":{"line":61,"column":40}},{"generated":{"line":49,"column":75},"source":"src/index.js","original":{"line":61,"column":61},"name":"value"},{"generated":{"line":49,"column":80},"source":"src/index.js","original":{"line":61,"column":26}},{"generated":{"line":49,"column":81},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":50,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":50,"column":58},"source":"src/index.js","original":{"line":63,"column":11},"name":"negativeArray"},{"generated":{"line":50,"column":71},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":52,"column":22},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":53,"column":22},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":54,"column":24},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":55,"column":20},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":56,"column":18},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":57,"column":16},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":58,"column":14},"source":"src/index.js","original":{"line":56,"column":2}},{"generated":{"line":58,"column":15},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":59,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":60,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":62,"column":12},"source":"src/index.js","original":{"line":56,"column":17},"name":"getNegative"},{"generated":{"line":62,"column":23},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":63,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":64,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":66,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":67,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":67,"column":88},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":68,"column":16},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":69,"column":16},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":70,"column":18},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":71,"column":20},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":72,"column":22},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":73,"column":24},"source":"src/index.js","original":{"line":44,"column":10},"name":"url"},{"generated":{"line":73,"column":27},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":73,"column":30},"source":"src/index.js","original":{"line":45,"column":6}},{"generated":{"line":73,"column":101},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":74,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":75,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":75,"column":31},"source":"src/index.js","original":{"line":47,"column":34},"name":"fetch"},{"generated":{"line":75,"column":36},"source":"src/index.js","original":{"line":47,"column":39}},{"generated":{"line":75,"column":37},"source":"src/index.js","original":{"line":47,"column":40},"name":"url"},{"generated":{"line":75,"column":40},"source":"src/index.js","original":{"line":47,"column":39}},{"generated":{"line":75,"column":41},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":77,"column":22},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":78,"column":24},"source":"src/index.js","original":{"line":47,"column":10},"name":"positivePromise"},{"generated":{"line":78,"column":39},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":79,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":80,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":80,"column":31},"source":"src/index.js","original":{"line":48,"column":31},"name":"positivePromise"},{"generated":{"line":80,"column":46},"source":"src/index.js","original":{"line":48,"column":46}},{"generated":{"line":80,"column":47},"source":"src/index.js","original":{"line":48,"column":47},"name":"json"},{"generated":{"line":80,"column":51},"source":"src/index.js","original":{"line":48,"column":31}},{"generated":{"line":80,"column":53},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":82,"column":22},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":83,"column":24},"source":"src/index.js","original":{"line":48,"column":10},"name":"positiveJSON"},{"generated":{"line":83,"column":36},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":84,"column":24},"source":"src/index.js","original":{"line":49,"column":10},"name":"positiveArray"},{"generated":{"line":84,"column":37},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":84,"column":40},"source":"src/index.js","original":{"line":49,"column":26},"name":"Object"},{"generated":{"line":84,"column":46},"source":"src/index.js","original":{"line":49,"column":32}},{"generated":{"line":84,"column":47},"source":"src/index.js","original":{"line":49,"column":33},"name":"values"},{"generated":{"line":84,"column":53},"source":"src/index.js","original":{"line":49,"column":26}},{"generated":{"line":84,"column":54},"source":"src/index.js","original":{"line":49,"column":40},"name":"positiveJSON"},{"generated":{"line":84,"column":66},"source":"src/index.js","original":{"line":49,"column":52}},{"generated":{"line":84,"column":67},"source":"src/index.js","original":{"line":49,"column":53},"name":"dataset"},{"generated":{"line":84,"column":74},"source":"src/index.js","original":{"line":49,"column":40}},{"generated":{"line":84,"column":75},"source":"src/index.js","original":{"line":49,"column":61},"name":"value"},{"generated":{"line":84,"column":80},"source":"src/index.js","original":{"line":49,"column":26}},{"generated":{"line":84,"column":81},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":85,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":85,"column":58},"source":"src/index.js","original":{"line":51,"column":11},"name":"positiveArray"},{"generated":{"line":85,"column":71},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":87,"column":22},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":88,"column":22},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":89,"column":24},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":90,"column":20},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":91,"column":18},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":92,"column":16},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":93,"column":14},"source":"src/index.js","original":{"line":43,"column":2}},{"generated":{"line":93,"column":15},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":94,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":95,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":97,"column":12},"source":"src/index.js","original":{"line":43,"column":17},"name":"getPositive"},{"generated":{"line":97,"column":23},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":98,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":99,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":101,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":102,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":102,"column":84},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":103,"column":16},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":104,"column":16},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":105,"column":18},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":106,"column":20},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":107,"column":22},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":108,"column":24},"source":"src/index.js","original":{"line":13,"column":10},"name":"url"},{"generated":{"line":108,"column":27},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":108,"column":30},"source":"src/index.js","original":{"line":14,"column":6}},{"generated":{"line":108,"column":184},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":109,"column":24},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":110,"column":24},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":110,"column":31},"source":"src/index.js","original":{"line":15,"column":30},"name":"fetch"},{"generated":{"line":110,"column":36},"source":"src/index.js","original":{"line":15,"column":35}},{"generated":{"line":110,"column":37},"source":"src/index.js","original":{"line":15,"column":36},"name":"url"},{"generated":{"line":110,"column":40},"source":"src/index.js","original":{"line":15,"column":35}},{"generated":{"line":110,"column":41},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":112,"column":22},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":113,"column":24},"source":"src/index.js","original":{"line":15,"column":10},"name":"dataPromise"},{"generated":{"line":113,"column":35},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":114,"column":24},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":115,"column":24},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":115,"column":31},"source":"src/index.js","original":{"line":16,"column":27},"name":"dataPromise"},{"generated":{"line":115,"column":42},"source":"src/index.js","original":{"line":16,"column":38}},{"generated":{"line":115,"column":43},"source":"src/index.js","original":{"line":16,"column":39},"name":"json"},{"generated":{"line":115,"column":47},"source":"src/index.js","original":{"line":16,"column":27}},{"generated":{"line":115,"column":49},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":117,"column":22},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":118,"column":24},"source":"src/index.js","original":{"line":16,"column":10},"name":"dataJSON"},{"generated":{"line":118,"column":32},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":119,"column":24},"source":"src/index.js","original":{"line":18,"column":4},"name":"initMap"},{"generated":{"line":119,"column":31},"source":"src/index.js","original":{"line":18,"column":11}},{"generated":{"line":119,"column":32},"source":"src/index.js","original":{"line":18,"column":12},"name":"dataJSON"},{"generated":{"line":119,"column":40},"source":"src/index.js","original":{"line":18,"column":11}},{"generated":{"line":119,"column":41},"source":"src/index.js","original":{"line":18,"column":4}},{"generated":{"line":121,"column":22},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":122,"column":22},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":123,"column":24},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":124,"column":20},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":125,"column":18},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":126,"column":16},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":127,"column":14},"source":"src/index.js","original":{"line":12,"column":2}},{"generated":{"line":127,"column":15},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":128,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":129,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":131,"column":12},"source":"src/index.js","original":{"line":12,"column":17},"name":"getData"},{"generated":{"line":131,"column":19},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":132,"column":14},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":133,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":135,"column":12},"source":"src/index.js","original":{"line":21,"column":8},"name":"initMap"},{"generated":{"line":135,"column":19},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":135,"column":22},"source":"src/index.js","original":{"line":21,"column":18}},{"generated":{"line":135,"column":31},"source":"src/index.js","original":{"line":21,"column":8},"name":"initMap"},{"generated":{"line":135,"column":38},"source":"src/index.js","original":{"line":21,"column":18}},{"generated":{"line":135,"column":39},"source":"src/index.js","original":{"line":21,"column":19},"name":"data"},{"generated":{"line":135,"column":43},"source":"src/index.js","original":{"line":21,"column":18}},{"generated":{"line":135,"column":45},"source":"src/index.js","original":{"line":21,"column":28}},{"generated":{"line":136,"column":14},"source":"src/index.js","original":{"line":22,"column":4}},{"generated":{"line":136,"column":18},"source":"src/index.js","original":{"line":22,"column":8},"name":"map"},{"generated":{"line":136,"column":21},"source":"src/index.js","original":{"line":22,"column":11}},{"generated":{"line":136,"column":24},"source":"src/index.js","original":{"line":22,"column":14},"name":"L"},{"generated":{"line":136,"column":25},"source":"src/index.js","original":{"line":22,"column":15}},{"generated":{"line":136,"column":26},"source":"src/index.js","original":{"line":22,"column":16},"name":"map"},{"generated":{"line":136,"column":29},"source":"src/index.js","original":{"line":22,"column":14}},{"generated":{"line":136,"column":30},"source":"src/index.js","original":{"line":22,"column":20}},{"generated":{"line":136,"column":35},"source":"src/index.js","original":{"line":22,"column":14}},{"generated":{"line":136,"column":37},"source":"src/index.js","original":{"line":22,"column":27}},{"generated":{"line":137,"column":16},"source":"src/index.js","original":{"line":23,"column":6},"name":"minZoom"},{"generated":{"line":137,"column":23},"source":"src/index.js","original":{"line":23,"column":13}},{"generated":{"line":137,"column":25},"source":"src/index.js","original":{"line":23,"column":15}},{"generated":{"line":137,"column":26},"source":"src/index.js","original":{"line":23,"column":16}},{"generated":{"line":138,"column":14},"source":"src/index.js","original":{"line":22,"column":27}},{"generated":{"line":138,"column":15},"source":"src/index.js","original":{"line":22,"column":14}},{"generated":{"line":138,"column":16},"source":"src/index.js","original":{"line":22,"column":4}},{"generated":{"line":139,"column":14},"source":"src/index.js","original":{"line":25,"column":4},"name":"getNegative"},{"generated":{"line":139,"column":25},"source":"src/index.js","original":{"line":25,"column":15}},{"generated":{"line":140,"column":14},"source":"src/index.js","original":{"line":27,"column":4}},{"generated":{"line":140,"column":18},"source":"src/index.js","original":{"line":27,"column":8},"name":"geoJson"},{"generated":{"line":140,"column":25},"source":"src/index.js","original":{"line":27,"column":15}},{"generated":{"line":140,"column":28},"source":"src/index.js","original":{"line":27,"column":18},"name":"L"},{"generated":{"line":140,"column":29},"source":"src/index.js","original":{"line":27,"column":19}},{"generated":{"line":140,"column":30},"source":"src/index.js","original":{"line":27,"column":20},"name":"geoJSON"},{"generated":{"line":140,"column":37},"source":"src/index.js","original":{"line":27,"column":18}},{"generated":{"line":140,"column":38},"source":"src/index.js","original":{"line":27,"column":28},"name":"data"},{"generated":{"line":140,"column":42},"source":"src/index.js","original":{"line":27,"column":18}},{"generated":{"line":140,"column":44},"source":"src/index.js","original":{"line":27,"column":34}},{"generated":{"line":141,"column":16},"source":"src/index.js","original":{"line":28,"column":6},"name":"onEachFeature"},{"generated":{"line":141,"column":29},"source":"src/index.js","original":{"line":28,"column":19}},{"generated":{"line":141,"column":31},"source":"src/index.js","original":{"line":28,"column":21},"name":"getFeature"},{"generated":{"line":141,"column":41},"source":"src/index.js","original":{"line":27,"column":34}},{"generated":{"line":142,"column":16},"source":"src/index.js","original":{"line":29,"column":6},"name":"weight"},{"generated":{"line":142,"column":22},"source":"src/index.js","original":{"line":29,"column":12}},{"generated":{"line":142,"column":24},"source":"src/index.js","original":{"line":29,"column":14}},{"generated":{"line":143,"column":14},"source":"src/index.js","original":{"line":27,"column":34}},{"generated":{"line":143,"column":15},"source":"src/index.js","original":{"line":27,"column":18}},{"generated":{"line":143,"column":17},"source":"src/index.js","original":{"line":30,"column":7},"name":"addTo"},{"generated":{"line":143,"column":22},"source":"src/index.js","original":{"line":27,"column":18}},{"generated":{"line":143,"column":23},"source":"src/index.js","original":{"line":30,"column":13},"name":"map"},{"generated":{"line":143,"column":26},"source":"src/index.js","original":{"line":27,"column":18}},{"generated":{"line":143,"column":27},"source":"src/index.js","original":{"line":27,"column":4}},{"generated":{"line":144,"column":14},"source":"src/index.js","original":{"line":32,"column":4}},{"generated":{"line":144,"column":18},"source":"src/index.js","original":{"line":32,"column":8},"name":"osm"},{"generated":{"line":144,"column":21},"source":"src/index.js","original":{"line":32,"column":11}},{"generated":{"line":144,"column":24},"source":"src/index.js","original":{"line":32,"column":14},"name":"L"},{"generated":{"line":144,"column":25},"source":"src/index.js","original":{"line":32,"column":15}},{"generated":{"line":144,"column":26},"source":"src/index.js","original":{"line":32,"column":16},"name":"tileLayer"},{"generated":{"line":144,"column":35},"source":"src/index.js","original":{"line":32,"column":14}},{"generated":{"line":144,"column":36},"source":"src/index.js","original":{"line":33,"column":6}},{"generated":{"line":144,"column":88},"source":"src/index.js","original":{"line":32,"column":14}},{"generated":{"line":144,"column":90},"source":"src/index.js","original":{"line":34,"column":6}},{"generated":{"line":145,"column":16},"source":"src/index.js","original":{"line":35,"column":8},"name":"maxZoom"},{"generated":{"line":145,"column":23},"source":"src/index.js","original":{"line":35,"column":15}},{"generated":{"line":145,"column":25},"source":"src/index.js","original":{"line":35,"column":17}},{"generated":{"line":145,"column":27},"source":"src/index.js","original":{"line":34,"column":6}},{"generated":{"line":146,"column":16},"source":"src/index.js","original":{"line":36,"column":8},"name":"attribution"},{"generated":{"line":146,"column":27},"source":"src/index.js","original":{"line":36,"column":19}},{"generated":{"line":146,"column":29},"source":"src/index.js","original":{"line":36,"column":21}},{"generated":{"line":147,"column":14},"source":"src/index.js","original":{"line":34,"column":6}},{"generated":{"line":147,"column":15},"source":"src/index.js","original":{"line":32,"column":14}},{"generated":{"line":147,"column":17},"source":"src/index.js","original":{"line":38,"column":6},"name":"addTo"},{"generated":{"line":147,"column":22},"source":"src/index.js","original":{"line":32,"column":14}},{"generated":{"line":147,"column":23},"source":"src/index.js","original":{"line":38,"column":12},"name":"map"},{"generated":{"line":147,"column":26},"source":"src/index.js","original":{"line":32,"column":14}},{"generated":{"line":147,"column":27},"source":"src/index.js","original":{"line":32,"column":4}},{"generated":{"line":148,"column":14},"source":"src/index.js","original":{"line":40,"column":4},"name":"map"},{"generated":{"line":148,"column":17},"source":"src/index.js","original":{"line":40,"column":7}},{"generated":{"line":148,"column":18},"source":"src/index.js","original":{"line":40,"column":8},"name":"fitBounds"},{"generated":{"line":148,"column":27},"source":"src/index.js","original":{"line":40,"column":4}},{"generated":{"line":148,"column":28},"source":"src/index.js","original":{"line":40,"column":18},"name":"geoJson"},{"generated":{"line":148,"column":35},"source":"src/index.js","original":{"line":40,"column":25}},{"generated":{"line":148,"column":36},"source":"src/index.js","original":{"line":40,"column":26},"name":"getBounds"},{"generated":{"line":148,"column":45},"source":"src/index.js","original":{"line":40,"column":18}},{"generated":{"line":148,"column":47},"source":"src/index.js","original":{"line":40,"column":4}},{"generated":{"line":149,"column":12},"source":"src/index.js","original":{"line":41,"column":3}},{"generated":{"line":149,"column":13},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":151,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":152,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":152,"column":19},"source":"src/index.js","original":{"line":54,"column":30},"name":"getPositive"},{"generated":{"line":152,"column":30},"source":"src/index.js","original":{"line":54,"column":41}},{"generated":{"line":152,"column":32},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":154,"column":10},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":155,"column":12},"source":"src/index.js","original":{"line":54,"column":8},"name":"positiveArray"},{"generated":{"line":155,"column":25},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":156,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":157,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":157,"column":19},"source":"src/index.js","original":{"line":66,"column":30},"name":"getNegative"},{"generated":{"line":157,"column":30},"source":"src/index.js","original":{"line":66,"column":41}},{"generated":{"line":157,"column":32},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":159,"column":10},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":160,"column":12},"source":"src/index.js","original":{"line":66,"column":8},"name":"negativeArray"},{"generated":{"line":160,"column":25},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":162,"column":12},"source":"src/index.js","original":{"line":68,"column":8},"name":"getFeature"},{"generated":{"line":162,"column":22},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":162,"column":25},"source":"src/index.js","original":{"line":68,"column":21}},{"generated":{"line":162,"column":34},"source":"src/index.js","original":{"line":68,"column":8},"name":"getFeature"},{"generated":{"line":162,"column":44},"source":"src/index.js","original":{"line":68,"column":21}},{"generated":{"line":162,"column":45},"source":"src/index.js","original":{"line":68,"column":22},"name":"feature"},{"generated":{"line":162,"column":52},"source":"src/index.js","original":{"line":68,"column":21}},{"generated":{"line":162,"column":54},"source":"src/index.js","original":{"line":68,"column":31},"name":"layer"},{"generated":{"line":162,"column":59},"source":"src/index.js","original":{"line":68,"column":21}},{"generated":{"line":162,"column":61},"source":"src/index.js","original":{"line":68,"column":41}},{"generated":{"line":163,"column":14},"source":"src/index.js","original":{"line":69,"column":4}},{"generated":{"line":163,"column":18},"source":"src/index.js","original":{"line":69,"column":8}},{"generated":{"line":163,"column":19},"source":"src/index.js","original":{"line":69,"column":9},"name":"feature"},{"generated":{"line":163,"column":26},"source":"src/index.js","original":{"line":69,"column":4}},{"generated":{"line":163,"column":28},"source":"src/index.js","original":{"line":69,"column":18}},{"generated":{"line":164,"column":14},"source":"src/index.js","original":{"line":71,"column":4}},{"generated":{"line":164,"column":18},"source":"src/index.js","original":{"line":71,"column":10},"name":"id"},{"generated":{"line":164,"column":20},"source":"src/index.js","original":{"line":71,"column":12}},{"generated":{"line":164,"column":23},"source":"src/index.js","original":{"line":71,"column":15},"name":"feature"},{"generated":{"line":164,"column":30},"source":"src/index.js","original":{"line":71,"column":22}},{"generated":{"line":164,"column":31},"source":"src/index.js","original":{"line":71,"column":23},"name":"id"},{"generated":{"line":164,"column":33},"source":"src/index.js","original":{"line":71,"column":15}},{"generated":{"line":164,"column":34},"source":"src/index.js","original":{"line":71,"column":26},"name":"split"},{"generated":{"line":164,"column":39},"source":"src/index.js","original":{"line":71,"column":15}},{"generated":{"line":164,"column":40},"source":"src/index.js","original":{"line":71,"column":32}},{"generated":{"line":164,"column":43},"source":"src/index.js","original":{"line":71,"column":15}},{"generated":{"line":164,"column":44},"source":"src/index.js","original":{"line":71,"column":4}},{"generated":{"line":164,"column":45},"source":"src/index.js","original":{"line":68,"column":41}},{"generated":{"line":164,"column":46},"source":"src/index.js","original":{"line":71,"column":38}},{"generated":{"line":166,"column":14},"source":"src/index.js","original":{"line":72,"column":4},"name":"layer"},{"generated":{"line":166,"column":19},"source":"src/index.js","original":{"line":72,"column":9}},{"generated":{"line":166,"column":20},"source":"src/index.js","original":{"line":72,"column":10},"name":"bindTooltip"},{"generated":{"line":166,"column":31},"source":"src/index.js","original":{"line":72,"column":4}},{"generated":{"line":166,"column":32},"source":"src/index.js","original":{"line":72,"column":22},"name":"feature"},{"generated":{"line":166,"column":39},"source":"src/index.js","original":{"line":72,"column":29}},{"generated":{"line":166,"column":40},"source":"src/index.js","original":{"line":72,"column":30},"name":"properties"},{"generated":{"line":166,"column":50},"source":"src/index.js","original":{"line":72,"column":22}},{"generated":{"line":166,"column":51},"source":"src/index.js","original":{"line":72,"column":41},"name":"name"},{"generated":{"line":166,"column":55},"source":"src/index.js","original":{"line":72,"column":4}},{"generated":{"line":167,"column":14},"source":"src/index.js","original":{"line":73,"column":4},"name":"layer"},{"generated":{"line":167,"column":19},"source":"src/index.js","original":{"line":73,"column":9}},{"generated":{"line":167,"column":20},"source":"src/index.js","original":{"line":73,"column":10},"name":"bindPopup"},{"generated":{"line":167,"column":29},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":167,"column":66},"source":"src/index.js","original":{"line":75,"column":22},"name":"feature"},{"generated":{"line":167,"column":73},"source":"src/index.js","original":{"line":75,"column":29}},{"generated":{"line":167,"column":74},"source":"src/index.js","original":{"line":75,"column":30},"name":"properties"},{"generated":{"line":167,"column":84},"source":"src/index.js","original":{"line":75,"column":22}},{"generated":{"line":167,"column":85},"source":"src/index.js","original":{"line":75,"column":41},"name":"name"},{"generated":{"line":167,"column":89},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":167,"column":143},"source":"src/index.js","original":{"line":76,"column":36},"name":"positiveArray"},{"generated":{"line":167,"column":156},"source":"src/index.js","original":{"line":76,"column":49}},{"generated":{"line":167,"column":157},"source":"src/index.js","original":{"line":76,"column":50},"name":"id"},{"generated":{"line":167,"column":159},"source":"src/index.js","original":{"line":76,"column":52}},{"generated":{"line":167,"column":160},"source":"src/index.js","original":{"line":76,"column":53}},{"generated":{"line":167,"column":161},"source":"src/index.js","original":{"line":76,"column":52}},{"generated":{"line":167,"column":162},"source":"src/index.js","original":{"line":76,"column":49}},{"generated":{"line":167,"column":163},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":167,"column":217},"source":"src/index.js","original":{"line":77,"column":36},"name":"negativeArray"},{"generated":{"line":167,"column":230},"source":"src/index.js","original":{"line":77,"column":49}},{"generated":{"line":167,"column":231},"source":"src/index.js","original":{"line":77,"column":50},"name":"id"},{"generated":{"line":167,"column":233},"source":"src/index.js","original":{"line":77,"column":52}},{"generated":{"line":167,"column":234},"source":"src/index.js","original":{"line":77,"column":53}},{"generated":{"line":167,"column":235},"source":"src/index.js","original":{"line":77,"column":52}},{"generated":{"line":167,"column":236},"source":"src/index.js","original":{"line":77,"column":49}},{"generated":{"line":167,"column":237},"source":"src/index.js","original":{"line":73,"column":4}},{"generated":{"line":168,"column":12},"source":"src/index.js","original":{"line":80,"column":3}},{"generated":{"line":168,"column":13},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":170,"column":12},"source":"src/index.js","original":{"line":82,"column":2},"name":"getData"},{"generated":{"line":170,"column":19},"source":"src/index.js","original":{"line":82,"column":9}},{"generated":{"line":172,"column":10},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":173,"column":10},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":174,"column":12},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":175,"column":8},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":176,"column":6},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":177,"column":4},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":178,"column":2},"source":"src/index.js","original":{"line":11,"column":0}}],"sources":{"src/index.js":"if (document.readyState !== \"loading\") {\n  console.log(\"Document is ready!\");\n  initializeCode();\n} else {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    console.log(\"Document is ready after waiting!\");\n    initializeCode();\n  });\n}\n\nasync function initializeCode() {\n  async function getData() {\n    const url =\n      \"https://geo.stat.fi/geoserver/wfs?service=WFS&version=2.0.0&request=GetFeature&typeName=tilastointialueet:kunta4500k&outputFormat=json&srsName=EPSG:4326\";\n    const dataPromise = await fetch(url);\n    const dataJSON = await dataPromise.json();\n\n    initMap(dataJSON);\n  }\n\n  const initMap = (data) => {\n    let map = L.map(\"map\", {\n      minZoom: -3,\n    });\n    getNegative();\n\n    let geoJson = L.geoJSON(data, {\n      onEachFeature: getFeature,\n      weight: 2,\n    }).addTo(map);\n\n    let osm = L.tileLayer(\n      \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      {\n        maxZoom: 19,\n        attribution: \"© OpenStreetMap\",\n      }\n    ).addTo(map);\n\n    map.fitBounds(geoJson.getBounds());\n  };\n\n  async function getPositive() {\n    const url =\n      \"https://statfin.stat.fi/PxWeb/sq/4bb2c735-1dc3-4c5e-bde7-2165df85e65f\";\n\n    const positivePromise = await fetch(url);\n    const positiveJSON = await positivePromise.json();\n    const positiveArray = Object.values(positiveJSON.dataset.value);\n\n    return positiveArray;\n  }\n\n  const positiveArray = await getPositive();\n\n  async function getNegative() {\n    const url =\n      \"https://statfin.stat.fi/PxWeb/sq/944493ca-ea4d-4fd9-a75c-4975192f7b6e\";\n    const negativePromise = await fetch(url);\n    const negativeJSON = await negativePromise.json();\n    const negativeArray = Object.values(negativeJSON.dataset.value);\n\n    return negativeArray;\n  }\n\n  const negativeArray = await getNegative();\n\n  const getFeature = (feature, layer) => {\n    if (!feature) return;\n\n    const id = feature.id.split(\".\"); //stackoverflow convert string to array\n    layer.bindTooltip(feature.properties.name);\n    layer.bindPopup(\n      `<ul>\n          <li>Name: ${feature.properties.name}</li>\n          <li>Positive migration: ${positiveArray[id[1]]}</li>\n          <li>Negative migration: ${negativeArray[id[1]]}</li>\n      </ul>`\n    );\n  };\n\n  getData();\n}\n"},"lineCount":null}},"error":null,"hash":"7fff40f1509991a0f623abf6dc255463","cacheData":{"env":{}}}